type Car {
    id: ID!
    ownerId: String!
    number: String!
    pts: String!
    sts: String!
    power_ls: String!
    power_kvt: String!
    mark: String!
    model: String!
    vin: String!
    color: String!
    volume: String!
    year: String!
    price: Int!
    price_3d: Int!
    price_5d: Int!
    transmission: String!
    engine_type: String!
    run: String!
    city: String!
    docs: [String!]!
    photos: [String!]!
    isLosfix: Boolean!
    isAirbags: Boolean!
    isHeater: Boolean!
    isAuxCable: Boolean!
    isBluetooth: Boolean!
    isCruise: Boolean!
    isConditioning: Boolean!
    isMultimedia: Boolean!
    isNavigation: Boolean!
    isSeatsVentilation: Boolean!
    isSeatsHeat: Boolean!
    isRoofRack: Boolean!
    isParktronic: Boolean!
    isCamera: Boolean!
    isChildrenSeat: Boolean!
    isCarDelivery: Boolean!
    isFreePlace: Boolean!
    isFuel: Boolean!
    childrenSeatPrice: Int!
    carDeliveryPrice: Int!
    freePlacePrice: Int!
    fuelPrice: Int!

}

type Query {
    allCars: [Car!]!
    findById(id: ID!): Car
    findAllCarsByMark(mark: String!): [Car!]!
    findAllCarsByCity(city: String!): [Car!]!
    allBooking(id: Int!): [Booking!]!
    findBookingById(id: Int!): Booking!
}

input CreateCarInput {
    ownerId: String!
    number: String!
    pts: String!
    sts: String!
    power_ls: String!
    power_kvt: String!
    mark: String!
    model: String!
    vin: String!
    color: String!
    volume: String!
    year: String!
    price: Int!
    price_3d: Int!
    price_5d: Int!
    transmission: String!
    engine_type: String!
    run: String!
    city: String!
    docs: [String!]!
    photos: [String!]!
    isLosfix: Boolean!
    isAirbags: Boolean!
    isHeater: Boolean!
    isAuxCable: Boolean!
    isBluetooth: Boolean!
    isCruise: Boolean!
    isConditioning: Boolean!
    isMultimedia: Boolean!
    isNavigation: Boolean!
    isSeatsVentilation: Boolean!
    isSeatsHeat: Boolean!
    isRoofRack: Boolean!
    isParktronic: Boolean!
    isCamera: Boolean!
    isChildrenSeat: Boolean!
    isCarDelivery: Boolean!
    isFreePlace: Boolean!
    isFuel: Boolean!
    childrenSeatPrice: Int!
    carDeliveryPrice: Int!
    freePlacePrice: Int!
    fuelPrice: Int!
}

type Mutation {
    createCar(createCarInput: CreateCarInput!): Car!
    createBooking(createBookingInput: CreateBookingInput!): Booking!
}

type Booking {
    id: ID!
    passengerID: Int!
    carID: Int!
    ownerID: Int!
    begin: String!
    end: String!
    duration: String!
    description: String!
    totalPrice: Int!
    isCarDelivery: Boolean!
    carDeliveryPrice: Int!
    isChildSeat: Boolean!
    childSeatPrice: Int!
    isAnyPlaceEnd: Boolean!
    anyPlaceEndPrice: Int!
    isArchived: Boolean!
    mark: String!
    model: String!
    year: Int!
}

input CreateBookingInput {
    passengerID: Int!
    carID: Int!
    ownerID: Int!
    begin: String!
    end: String!
    duration: String!
    description: String!
    isCarDelivery: Boolean!
    totalPrice: Int!
    carDeliveryPrice: Int!
    isChildSeat: Boolean!
    childSeatPrice: Int!
    isAnyPlaceEnd: Boolean!
    anyPlaceEndPrice: Int!
    isArchived: Boolean!
    mark: String!
    model: String!
    year: Int!
}
